// Code generated by protoc-gen-go. DO NOT EDIT.
// source: counter.proto

package cds_cabinet_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Counter struct {
	// Types that are valid to be assigned to Object:
	//	*Counter_Node
	//	*Counter_Edge
	Object               isCounter_Object `protobuf_oneof:"object"`
	Counter              uint32           `protobuf:"varint,10,opt,name=counter,proto3" json:"counter,omitempty"`
	Value                int64            `protobuf:"varint,11,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Counter) Reset()         { *m = Counter{} }
func (m *Counter) String() string { return proto.CompactTextString(m) }
func (*Counter) ProtoMessage()    {}
func (*Counter) Descriptor() ([]byte, []int) {
	return fileDescriptor_75dcd656fce7132f, []int{0}
}

func (m *Counter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Counter.Unmarshal(m, b)
}
func (m *Counter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Counter.Marshal(b, m, deterministic)
}
func (m *Counter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Counter.Merge(m, src)
}
func (m *Counter) XXX_Size() int {
	return xxx_messageInfo_Counter.Size(m)
}
func (m *Counter) XXX_DiscardUnknown() {
	xxx_messageInfo_Counter.DiscardUnknown(m)
}

var xxx_messageInfo_Counter proto.InternalMessageInfo

type isCounter_Object interface {
	isCounter_Object()
}

type Counter_Node struct {
	Node string `protobuf:"bytes,1,opt,name=node,proto3,oneof"`
}

type Counter_Edge struct {
	Edge *Edge `protobuf:"bytes,2,opt,name=edge,proto3,oneof"`
}

func (*Counter_Node) isCounter_Object() {}

func (*Counter_Edge) isCounter_Object() {}

func (m *Counter) GetObject() isCounter_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Counter) GetNode() string {
	if x, ok := m.GetObject().(*Counter_Node); ok {
		return x.Node
	}
	return ""
}

func (m *Counter) GetEdge() *Edge {
	if x, ok := m.GetObject().(*Counter_Edge); ok {
		return x.Edge
	}
	return nil
}

func (m *Counter) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *Counter) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Counter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Counter_Node)(nil),
		(*Counter_Edge)(nil),
	}
}

func init() {
	proto.RegisterType((*Counter)(nil), "cds.cabinet.v1.Counter")
}

func init() { proto.RegisterFile("counter.proto", fileDescriptor_75dcd656fce7132f) }

var fileDescriptor_75dcd656fce7132f = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0x2f, 0xcd,
	0x2b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4b, 0x4e, 0x29, 0xd6, 0x4b,
	0x4e, 0x4c, 0xca, 0xcc, 0x4b, 0x2d, 0xd1, 0x2b, 0x33, 0x94, 0xe2, 0x4a, 0x4d, 0x49, 0x4f, 0x85,
	0xc8, 0x29, 0xb5, 0x32, 0x72, 0xb1, 0x3b, 0x43, 0x54, 0x0b, 0x89, 0x70, 0xb1, 0xe4, 0xe5, 0xa7,
	0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x7a, 0x30, 0x04, 0x81, 0x79, 0x42, 0x5a, 0x5c, 0x2c,
	0x20, 0xf5, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x22, 0x7a, 0xa8, 0x86, 0xe9, 0xb9, 0xa6,
	0xa4, 0xa7, 0x82, 0xd4, 0x82, 0xd4, 0x08, 0x49, 0x70, 0xb1, 0x43, 0xad, 0x96, 0xe0, 0x52, 0x60,
	0xd4, 0xe0, 0x0d, 0x82, 0x71, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0xb8,
	0x15, 0x18, 0x35, 0x98, 0x83, 0x20, 0x1c, 0x27, 0x0e, 0x2e, 0xb6, 0xfc, 0xa4, 0xac, 0xd4, 0xe4,
	0x92, 0x24, 0x36, 0xb0, 0x73, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x94, 0x92, 0x5e, 0xbe,
	0xbb, 0x00, 0x00, 0x00,
}
